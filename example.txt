import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.transaction.annotation.Transactional;

public interface DomainRepository extends JpaRepository<Domain, String>{
	@Modifying
	@Transactional
	@Query("delete from TABLE m where to_char(createTime,'yyyymmdd' ) = ?1")
	void deleteTargetDate(String targetDate);
}




import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;

@Entity(name="Table name")
public class domain {
	@Id
	@Column(name = "OID", columnDefinition = "CHAR(100)")
	private String oid;
	....
	
	
# MONGODB (MongoProperties)
spring.data.mongodb.database=데이터베이스
spring.data.mongodb.host=주소
spring.data.mongodb.port=포트
# Oracle settings
spring.datasource.url=jdbc:oracle:thin:@//주소:포트/이름 
spring.datasource.username=유저이름
spring.datasource.password=패스워드
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.data.jpa.repositories.enabled=true
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true


<dependencies>
    <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-jpa</artifactId>
        <version>2.0.6.RELEASE</version>
    </dependency>
</dependencies><repositories>
    <repository>
        <id>spring-libs-release</id>
        <name>Spring Releases</name>
        <url>https://repo.spring.io/libs-release</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
    </repository>
</repositories>
<참조: http://projects.spring.io/spring-data-jpa/>

spring.datasource.url=jdbc:mysql://localhost:3307/db_name
spring.datasource.username=admin
spring.datasource.password=********
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
<application.properties>



create table SAMPLE_TABLE (
  id int not null autoincrement,
  sample_name varchar(100) not null,
  code varchar(20) not null,
  create_datetime datetime not null,
  primary key(id)
);

@Entity
@Data
public class SampleTable {
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    private long id;
 
    private String sampleName;
    private String code;
}


public interface YourSampleTableRepository extends CrudRepository<SampleTable, Long> {
    Layout findOne(Long id);
}

http://www.chidoo.me/index.php/2016/05/08/spring-data-jpa-for-short-memories/
